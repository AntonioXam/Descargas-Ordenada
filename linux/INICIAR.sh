#!/bin/bash

# ===================================================================
# DescargasOrdenadas v3.0 - Launcher Principal Linux
# NO REQUIERE PYTHON PREINSTALADO - Lo instala autom√°ticamente
# Creado por Champi üçÑ
# ===================================================================

# Configurar UTF-8
export LANG=es_ES.UTF-8
export LC_ALL=es_ES.UTF-8

# Obtener directorio del proyecto (carpeta padre)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
CURRENT_DIR="$(pwd)"
cd "$PROJECT_DIR"

echo ""
echo "üçÑ DescargasOrdenadas v3.0 - Linux"
echo "================================="
echo "üí° Launcher que NO requiere Python preinstalado"
echo "‚ö° Detectar√° e instalar√° todo autom√°ticamente"
echo ""

echo "üìÅ Proyecto: $PROJECT_DIR"
echo ""

# Funci√≥n para detectar distribuci√≥n
detectar_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    elif [ -f /etc/lsb-release ]; then
        . /etc/lsb-release
        echo "$DISTRIB_ID" | tr '[:upper:]' '[:lower:]'
    else
        echo "unknown"
    fi
}

# Funci√≥n para verificar si Python est√° disponible
verificar_python() {
    if command -v python3 &> /dev/null; then
        echo "‚úÖ Python3 encontrado: $(python3 --version)"
        return 0
    elif command -v python &> /dev/null; then
        echo "‚úÖ Python encontrado: $(python --version)"
        return 0
    else
        return 1
    fi
}

# Funci√≥n para instalar Python autom√°ticamente
instalar_python_auto() {
    DISTRO=$(detectar_distro)
    echo "üêß Detectado: $DISTRO"
    echo "üì¶ Instalando Python autom√°ticamente..."
    
    case $DISTRO in
        ubuntu|debian|mint|elementary|zorin|pop)
            echo "üîß Usando apt (Debian/Ubuntu)..."
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv python3-tk
            ;;
            
        fedora|centos|rhel|rocky|alma)
            echo "üîß Usando dnf/yum (RedHat/Fedora)..."
            if command -v dnf &> /dev/null; then
                sudo dnf install -y python3 python3-pip python3-tkinter
            else
                sudo yum install -y python3 python3-pip tkinter
            fi
            ;;
            
        arch|manjaro|endeavour)
            echo "üîß Usando pacman (Arch)..."
            sudo pacman -S --noconfirm python python-pip tk
            ;;
            
        opensuse*|suse)
            echo "üîß Usando zypper (openSUSE)..."
            sudo zypper install -y python3 python3-pip python3-tk
            ;;
            
        alpine)
            echo "üîß Usando apk (Alpine)..."
            sudo apk add python3 py3-pip tk
            ;;
            
        gentoo)
            echo "üîß Usando emerge (Gentoo)..."
            sudo emerge dev-lang/python dev-python/pip dev-lang/tk
            ;;
            
        *)
            echo "‚ùå Distribuci√≥n no reconocida: $DISTRO"
            return 1
            ;;
    esac
    
    # Verificar instalaci√≥n
    if verificar_python; then
        echo "‚úÖ Python instalado exitosamente"
        return 0
    else
        echo "‚ùå Error al instalar Python"
        return 1
    fi
}

# Funci√≥n para mostrar instrucciones manuales
mostrar_instrucciones() {
    DISTRO=$(detectar_distro)
    
    echo ""
    echo "üìñ INSTRUCCIONES MANUALES - Instalaci√≥n de Python"
    echo "================================================"
    echo ""
    
    case $DISTRO in
        ubuntu|debian|mint|elementary|zorin|pop)
            echo "üêß Para $DISTRO (Debian/Ubuntu):"
            echo "sudo apt update"
            echo "sudo apt install python3 python3-pip python3-venv python3-tk"
            ;;
            
        fedora|centos|rhel|rocky|alma)
            echo "üêß Para $DISTRO (RedHat/Fedora):"
            if command -v dnf &> /dev/null; then
                echo "sudo dnf install python3 python3-pip python3-tkinter"
            else
                echo "sudo yum install python3 python3-pip tkinter"
            fi
            ;;
            
        arch|manjaro|endeavour)
            echo "üêß Para $DISTRO (Arch):"
            echo "sudo pacman -S python python-pip tk"
            ;;
            
        opensuse*|suse)
            echo "üêß Para $DISTRO (openSUSE):"
            echo "sudo zypper install python3 python3-pip python3-tk"
            ;;
            
        alpine)
            echo "üêß Para $DISTRO (Alpine):"
            echo "sudo apk add python3 py3-pip tk"
            ;;
            
        gentoo)
            echo "üêß Para $DISTRO (Gentoo):"
            echo "sudo emerge dev-lang/python dev-python/pip dev-lang/tk"
            ;;
            
        *)
            echo "üêß Para distribuciones gen√©ricas:"
            echo "- Usa tu gestor de paquetes para instalar 'python3' y 'python3-pip'"
            echo "- Tambi√©n instala 'python3-tk' o 'tkinter' para la interfaz gr√°fica"
            ;;
    esac
    
    echo ""
    echo "üí° Alternativamente:"
    echo "1. Descarga desde: https://python.org/downloads/"
    echo "2. Compila desde c√≥digo fuente"
    echo "3. Usa pyenv: curl https://pyenv.run | bash"
    echo ""
    read -p "Presiona Enter para cerrar..." || true
}

# Verificar Python
echo "üîç Verificando Python..."
if verificar_python; then
    # Python ya est√° disponible
    python_cmd=""
    if command -v python3 &> /dev/null; then
        python_cmd="python3"
    else
        python_cmd="python"
    fi
    
    echo "üöÄ Iniciando DescargasOrdenadas..."
    echo "================================"
    echo ""
    
    # Ejecutar la aplicaci√≥n principal
    $python_cmd main.py "$@"
    exit_code=$?
    
    cd "$CURRENT_DIR"
    
    if [ $exit_code -eq 0 ]; then
        echo "‚úÖ Aplicaci√≥n ejecutada exitosamente"
    else
        echo "‚ùå La aplicaci√≥n termin√≥ con errores (C√≥digo: $exit_code)"
        
        # Solo hacer pausa si no es ejecuci√≥n silenciosa
        if [[ "$*" != *"--tarea-programada"* ]] && [[ "$*" != *"--inicio-sistema"* ]]; then
            read -p "Presiona Enter para cerrar..." || true
        fi
    fi
    
    exit $exit_code
fi

# Python no encontrado - ofrecer instalaci√≥n
echo "‚ùå Python no est√° instalado en este sistema"
echo ""
echo "ü§ñ ¬øC√≥mo quieres instalarlo?"
echo ""
echo "1. Autom√°tico (recomendado)"
echo "2. Mostrar instrucciones manuales"
echo "3. Salir"
echo ""
read -p "Selecciona una opci√≥n (1-3): " opcion

case $opcion in
    1)
        echo ""
        if instalar_python_auto; then
            echo "‚úÖ ¬°Listo! Ejecutando aplicaci√≥n..."
            echo ""
            
            python_cmd=""
            if command -v python3 &> /dev/null; then
                python_cmd="python3"
            else
                python_cmd="python"
            fi
            
            $python_cmd main.py "$@"
            exit $?
        else
            echo "‚ùå No se pudo instalar autom√°ticamente"
            mostrar_instrucciones
        fi
        ;;
        
    2)
        mostrar_instrucciones
        ;;
        
    3)
        echo ""
        echo "üëã ¬°Hasta luego!"
        cd "$CURRENT_DIR"
        exit 1
        ;;
        
    *)
        echo "‚ùå Opci√≥n inv√°lida"
        mostrar_instrucciones
        ;;
esac

cd "$CURRENT_DIR"
exit 1 