#!/bin/bash

# ===================================================================
# DescargasOrdenadas v3.0 - Launcher Portable para Linux
# Creado por Champi üçÑ
# ===================================================================

# Configurar UTF-8
export LANG=es_ES.UTF-8
export LC_ALL=es_ES.UTF-8

# Obtener el directorio donde est√° este script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CURRENT_DIR="$(pwd)"

# Cambiar al directorio del script para asegurar rutas relativas
cd "$SCRIPT_DIR"

echo ""
echo "üçÑ DescargasOrdenadas v3.0 - Portable para Linux"
echo "==============================================="
echo ""

echo "üìÅ Directorio de la aplicaci√≥n: $SCRIPT_DIR"
echo ""

# Verificar si Python est√° disponible
echo "üîç Verificando Python..."

if ! command -v python3 &> /dev/null && ! command -v python &> /dev/null; then
    echo "‚ùå Python no est√° instalado"
    echo ""
    echo "üí° Para continuar necesitas instalar Python:"
    echo "   Ubuntu/Debian: sudo apt update && sudo apt install python3 python3-pip"
    echo "   Fedora/RHEL:   sudo dnf install python3 python3-pip"
    echo "   Arch Linux:    sudo pacman -S python python-pip"
    echo "   openSUSE:      sudo zypper install python3 python3-pip"
    echo ""
    echo "üìÅ Esta es una versi√≥n portable que requiere Python instalado"
    echo ""
    read -p "Presiona Enter para cerrar..." || true
    cd "$CURRENT_DIR"
    exit 1
fi

# Usar python3 si est√° disponible, sino python
if command -v python3 &> /dev/null; then
    PYTHON_CMD="python3"
else
    PYTHON_CMD="python"
fi

$PYTHON_CMD --version
echo "‚úÖ Python encontrado ($PYTHON_CMD)"
echo ""

# Verificar si pip est√° disponible
echo "üîç Verificando pip..."
if ! $PYTHON_CMD -m pip --version &> /dev/null; then
    echo "‚ùå pip no est√° disponible"
    echo "üí° Instala pip para continuar:"
    echo "   Ubuntu/Debian: sudo apt install python3-pip"
    echo "   Fedora/RHEL:   sudo dnf install python3-pip"
    echo "   Arch Linux:    sudo pacman -S python-pip"
    echo ""
    read -p "Presiona Enter para cerrar..." || true
    cd "$CURRENT_DIR"
    exit 1
fi

echo "‚úÖ pip encontrado"
echo ""

# Verificar e instalar dependencias autom√°ticamente
echo "üîß Verificando dependencias..."
echo "‚è≥ Si faltan dependencias, se instalar√°n autom√°ticamente..."
echo ""

# Ejecutar la aplicaci√≥n - main.py manejar√° la instalaci√≥n de dependencias
echo "üöÄ Iniciando DescargasOrdenadas..."
echo ""
$PYTHON_CMD ../main.py "$@"

# Capturar el c√≥digo de salida
EXIT_CODE=$?

# Restaurar directorio original
cd "$CURRENT_DIR"

# Si hubo error y no es una ejecuci√≥n en modo silencioso, mantener terminal abierto
if [ $EXIT_CODE -ne 0 ]; then
    echo ""
    echo "‚ùå La aplicaci√≥n termin√≥ con errores (C√≥digo: $EXIT_CODE)"
    
    # Solo hacer pausa si no es una tarea programada o inicio autom√°tico
    if [[ "$*" != *"--tarea-programada"* ]] && [[ "$*" != *"--inicio-sistema"* ]]; then
        echo ""
        read -p "Presiona Enter para cerrar..." || true
    fi
fi

exit $EXIT_CODE 